name: Build, push and deploy
on:
  push:
    branches: [ master ]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout master
      uses: actions/checkout@master

    - name: Build container image
      # we take the github repository name ($GITHUB_REPOSITORY also contains the user, so we slice it at the '/') and append the head of the commit hash
      run: docker build -t publictransport/$(echo $GITHUB_REPOSITORY | cut -d'/' -f2 -):$(echo $GITHUB_SHA | head -c7) .

    - name: Docker Login
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_ACCESS_TOKEN: ${{ secrets.DOCKER_ACCESS_TOKEN }}
      run: echo $DOCKER_ACCESS_TOKEN | docker login -u $DOCKER_USERNAME --password-stdin

    - name: Push image to Docker Hub
      run: docker push publictransport/$(echo $GITHUB_REPOSITORY | cut -d'/' -f2 -)

    - name: Update kubernetes resource definitions
      run: TAG=$(echo $GITHUB_SHA | head -c7) && REPO=$(echo $GITHUB_REPOSITORY | cut -d'/' -f2 -) && for resource in $GITHUB_WORKSPACE/kubernetes/*.yaml ; do sed -i "s|<IMAGE>|publictransport/$REPO:$TAG|" $resource; done

    - name: Setup kubeconfig
      env:
        KUBERNETES_CONFIG: ${{ secrets.KUBERNETES_CONFIG }}
      run:
        echo $KUBERNETES_CONFIG | base64 --decode > $GITHUB_WORKSPACE/.kubeconfig

    - name: Deploy to Kubernetes
      run: for resource in $GITHUB_WORKSPACE/kubernetes/*.yaml ; do kubectl --kubeconfig=$GITHUB_WORKSPACE/.kubeconfig apply -f $resource ; done

    - name: Verify deployment
      run: for resource in $GITHUB_WORKSPACE/kubernetes/*.yaml ; do if [[ $(kubectl --kubeconfig=$GITHUB_WORKSPACE/.kubeconfig get -f $resource -o jsonpath='{.kind}') = 'Deployment' ]]; then kubectl --kubeconfig=$GITHUB_WORKSPACE/.kubeconfig rollout status -f $resource; fi ; done
